{"version":3,"sources":["components/ButtonLone/ButtonLone.jsx","assets/icons/ArrowForwardIcon.jsx","components/Input/Input.jsx","assets/icons/RadioButtonUncheckedIcon.jsx","assets/icons/TaskAltIcon.jsx","assets/icons/DeleteForeverIcon.jsx","components/Item/Item.jsx","components/Tasks/Tasks.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ButtonLone","props","onClickCapture","click","className","classInject","type","icon","ArrowForwardIcon","xmlns","height","viewBox","width","fill","d","Input","placeholder","value","inputText","onChange","e","setInputText","target","preventDefault","length","setTasks","tasks","text","completed","id","Math","random","RadioButtonUncheckedIcon","TaskAltIcon","enableBackground","DeleteForeverIcon","Item","item","map","i","filter","Tasks","App","useState","useEffect","getLocalTasks","setLocalTasks","localStorage","setItem","JSON","stringify","getItem","localTasks","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0682a4f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ButtonLone.scss\";\r\n\r\nconst ButtonLone = (props) => {\r\n    return (\r\n        <button\r\n            onClickCapture = {props.click}\r\n            className = {`buttonLone + ${props.classInject}`}\r\n            type = \"submit\"\r\n        >\r\n            {props.icon}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonLone;","import React from \"react\";\r\n\r\nconst ArrowForwardIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill = \"#000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M5 13h11.17l-4.88 4.88c-.39.39-.39 1.03 0 1.42.39.39 1.02.39 1.41 0l6.59-6.59c.39-.39.39-1.02 0-1.41l-6.58-6.6c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L16.17 11H5c-.55 0-1 .45-1 1s.45 1 1 1z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default ArrowForwardIcon;","import React from \"react\";\r\n\r\n//Style\r\nimport \"./Input.scss\"\r\n\r\n//Components\r\nimport ButtonLone from \"../ButtonLone/ButtonLone.jsx\";\r\n\r\n//Icons\r\nimport ArrowForwardIcon from \"../../assets/icons/ArrowForwardIcon.jsx\"\r\n\r\nconst Input = (props) => {\r\n    const inputTextHandler = (e) => {\r\n        props.setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTaskHandler = (e) => {\r\n        e.preventDefault();\r\n        if(props.inputText.length > 0) {\r\n            props.setTasks([...props.tasks, {text: props.inputText, completed: false, id: Math.random()}]);\r\n            props.setInputText(\"\");\r\n        }\r\n    }\r\n\r\n    // const statusHandler = (e) => {\r\n    //     props.setStatus(e.target.value);\r\n    // }\r\n\r\n    return (\r\n        <form className = \"task-form\">\r\n            <input\r\n                placeholder = {props.placeholder}\r\n                value = {props.inputText}\r\n                onChange = {inputTextHandler}\r\n                type = \"text\"\r\n                className=\"button-input\"\r\n            />\r\n\r\n            <div className = \"input-focus-border\" />\r\n\r\n            <ButtonLone\r\n                classInject = \"inputButton\"\r\n                icon = {<ArrowForwardIcon />}\r\n                click = {submitTaskHandler}\r\n            />\r\n\r\n            {/* <div className=\"select\">\r\n                <select onChange = {statusHandler} name = \"todos\" className = \"filter-todo\">\r\n                    <option value = \"all\">All</option>\r\n                    <option value = \"completed\">Completed</option>\r\n                    <option value = \"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div> */}\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst RadioButtonUncheckedIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default RadioButtonUncheckedIcon;","import React from \"react\";\r\n\r\nconst TaskAltIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><rect fill=\"none\" height=\"24\" width=\"24\"/><path d=\"M21.29,5.89l-10,10c-0.39,0.39-1.02,0.39-1.41,0l-2.83-2.83c-0.39-0.39-0.39-1.02,0-1.41l0,0c0.39-0.39,1.02-0.39,1.41,0 l2.12,2.12l9.29-9.29c0.39-0.39,1.02-0.39,1.41,0l0,0C21.68,4.87,21.68,5.5,21.29,5.89z M15.77,2.74c-1.69-0.69-3.61-0.93-5.61-0.57 C6.09,2.9,2.84,6.18,2.15,10.25C1.01,17,6.63,22.78,13.34,21.91c3.96-0.51,7.28-3.46,8.32-7.31c0.4-1.47,0.44-2.89,0.21-4.22 c-0.13-0.8-1.12-1.11-1.7-0.54v0c-0.23,0.23-0.33,0.57-0.27,0.89c0.22,1.33,0.12,2.75-0.52,4.26c-1.16,2.71-3.68,4.7-6.61,4.97 c-5.1,0.47-9.33-3.85-8.7-8.98c0.43-3.54,3.28-6.42,6.81-6.91c1.73-0.24,3.37,0.09,4.77,0.81c0.39,0.2,0.86,0.13,1.17-0.18l0,0 c0.48-0.48,0.36-1.29-0.24-1.6C16.31,2.98,16.04,2.85,15.77,2.74z\"/></svg>\r\n    )\r\n}\r\n\r\nexport default TaskAltIcon;","import React from \"react\";\r\n\r\nconst DeleteForeverIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\"/></g><g><path d=\"M6,19c0,1.1,0.9,2,2,2h8c1.1,0,2-0.9,2-2V7H6V19z M9.17,12.59c-0.39-0.39-0.39-1.02,0-1.41c0.39-0.39,1.02-0.39,1.41,0 L12,12.59l1.41-1.41c0.39-0.39,1.02-0.39,1.41,0s0.39,1.02,0,1.41L13.41,14l1.41,1.41c0.39,0.39,0.39,1.02,0,1.41 s-1.02,0.39-1.41,0L12,15.41l-1.41,1.41c-0.39,0.39-1.02,0.39-1.41,0c-0.39-0.39-0.39-1.02,0-1.41L10.59,14L9.17,12.59z M18,4h-2.5 l-0.71-0.71C14.61,3.11,14.35,3,14.09,3H9.91c-0.26,0-0.52,0.11-0.7,0.29L8.5,4H6C5.45,4,5,4.45,5,5s0.45,1,1,1h12 c0.55,0,1-0.45,1-1S18.55,4,18,4z\"/></g></svg>\r\n    )\r\n}\r\n\r\nexport default DeleteForeverIcon;","import React from \"react\";\r\n\r\n//Style\r\nimport \"./Item.scss\"\r\n\r\n//Components\r\nimport ButtonLone from \"../ButtonLone/ButtonLone.jsx\"\r\n\r\n//Icons\r\nimport RadioButtonUncheckedIcon from \"../../assets/icons/RadioButtonUncheckedIcon\"\r\nimport TaskAltIcon from \"../../assets/icons/TaskAltIcon\"\r\nimport DeleteForeverIcon from \"../../assets/icons/DeleteForeverIcon\"\r\n\r\nconst Item = ({item, text, tasks, setTasks}) => {\r\n    const deleteHandler = () => {\r\n        setTasks(tasks.filter(i => i.id !== item.id));\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTasks(tasks.map((i) => {\r\n            if(i.id === item.id)\r\n                return {...i, completed: !item.completed};\r\n\r\n            return i;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <li className = {`task-item ${item.completed ? \"completed-item\" : \"\"}`}>\r\n            <ButtonLone\r\n                className = \"complete-btn\"\r\n                icon = {item.completed ? <TaskAltIcon /> : <RadioButtonUncheckedIcon/>}\r\n                click = {completeHandler}\r\n            />\r\n\r\n            {text}\r\n\r\n            <ButtonLone\r\n                className = \"trash-btn\"\r\n                icon = {<DeleteForeverIcon />}\r\n                click = {deleteHandler}\r\n            />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from \"react\";\r\n\r\n//Style\r\nimport \"./Tasks.scss\"\r\n\r\n//Components\r\nimport Item from \"../Item/Item\";\r\n\r\nconst Tasks = ({tasks, setTasks}) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"task-list\">\r\n                {tasks.map((item) => (!item.completed ?\r\n                    <Item\r\n                        setTasks={setTasks}\r\n                        tasks={tasks}\r\n                        item={item}\r\n                        text={item.text}\r\n                        key={item.id}\r\n                    /> : \"\"\r\n                ))}\r\n\r\n                <hr className = \"task-divider\" />\r\n\r\n                {tasks.map((item) => (item.completed ?\r\n                    <Item\r\n                        setTasks={setTasks}\r\n                        tasks={tasks}\r\n                        item={item}\r\n                        text={item.text}\r\n                        key={item.id}\r\n                    /> : \"\"\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import React, {useState, useEffect} from 'react';\nimport './App.scss';\n\n//Components\nimport Input from \"./components/Input/Input.jsx\";\nimport Tasks from \"./components/Tasks/Tasks.jsx\";\n\nfunction App() {\n    //States\n    const [inputText, setInputText] = useState(\"\");\n    const [tasks, setTasks] = useState([]);\n    //const [status, setStatus] = useState(\"all\");\n    //const [filteredTasks, setFilteredTasks] = useState([]);\n\n    //Effects\n    useEffect(() => {\n        getLocalTasks();\n    }, []);\n\n    useEffect(() => {\n        setLocalTasks();\n    }, [tasks]);\n\n    //Methods\n    // const filterHandler = () => {\n    //     switch(status) {\n    //         case \"completed\":\n    //             setFilteredTasks(tasks.filter(item => item.completed === true))\n    //             break;\n\n    //         case \"uncompleted\":\n    //             setFilteredTasks(tasks.filter(item => item.completed === false))\n    //             break;\n\n    //         default:\n    //             setFilteredTasks(tasks);\n    //             break;\n    //     }\n    // }\n\n    const setLocalTasks = () => {\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n\n    const getLocalTasks = () => {\n        if(localStorage.getItem(\"tasks\") === null)\n            localStorage.setItem(\"tasks\", JSON.stringify([]));\n\n        else {\n            let localTasks = JSON.parse(localStorage.getItem(\"tasks\", JSON.stringify(tasks)));\n            setTasks(localTasks);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Your Tasks</h1>\n            </header>\n\n            <Input\n                placeholder = \"Enter a New Task\"\n                tasks = {tasks}\n                setTasks = {setTasks}\n                inputText = {inputText}\n                setInputText = {setInputText}\n            />\n            <Tasks\n                tasks = {tasks}\n                setTasks = {setTasks}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}